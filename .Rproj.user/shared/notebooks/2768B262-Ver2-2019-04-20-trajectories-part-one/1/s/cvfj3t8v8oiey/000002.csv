"0","# solve"
"0","  X <- cbind( df$dx1, df$x )"
"0","  colnames(X) <- c(""dx1"",""x"")"
"0","  Y <- df$dx2"
"0","  beta <- solve( t(X) %*% X ) %*% t(X) %*% Y"
"0","  zeta.hat  <- as.numeric( beta[1,1] )"
"0","  eta.hat <- as.numeric( beta[2,1] )"
"0","  df$dx2.hat <- X %*% c(zeta.hat, eta.hat)"
"0","# reconstruct : by this, we mean solve the ODE with the estimated :"
"0","  # x0 = df$x[1] -- initial displacement"
"0","  # v0 = df$dx1[1] -- initial velocity"
"0","  # eta = eta.hat and zeta = zeta.hat"
"0","params <- c( zeta = zeta.hat, eta = eta.hat )"
"0","times <- seq(1,100, by = 1)"
"0","yini <- c(y1 = df$x[1], y2 = df$dx1[1])"
"0","soln <- ode(y = yini, func = OscDiffEq, times = times, parms = params)"
"0","df$recon.x <- soln[,""y1""]"
"0","ggplot() +"
"0","  geom_point( data = df, aes( x = Time, y = x ), colour = ""gray50"", size = 4 ) + "
"0","  geom_line( data = df, aes( x = Time, y = x ), colour = ""gray50"" ) +"
"0","  geom_point( data = df, aes( x = Time, y = recon.x ), colour = ""red"", size = 2 ) + "
"0","  geom_line( data = df, aes( x = Time, y = recon.x ), colour = ""red"" ) +"
"0","  "
"0","  ylab(TeX(""x(t)"")) +"
"0","  xlab(TeX(""t"")) + "
"0","  ggtitle(""Simulated Data + Fit"") +"
"0","  dwjtheme"
